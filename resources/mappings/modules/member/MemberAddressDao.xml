<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.member.dao.MemberAddressDao">
    
	<sql id="memberAddressColumns">
		a.id AS "id",
		a.memberid AS "memberid.id",
		a.province AS "province",
		a.city AS "city",
		a.county AS "county",
		a.address AS "address",
		a.isdefault AS "isdefault",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.shr AS "shr",
		a.shrmobile AS "shrmobile"
	</sql>
	
	<sql id="memberAddressJoins">
		LEFT JOIN member b ON b.id = a.memberid
	</sql>
	
    
	<select id="get" resultType="MemberAddress" >
		SELECT 
			<include refid="memberAddressColumns"/>
		FROM member_address a
		<include refid="memberAddressJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MemberAddress" >
		SELECT 
			<include refid="memberAddressColumns"/>
		FROM member_address a
		<include refid="memberAddressJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="memberid != null and memberid.id != null and memberid.id != ''">
				AND a.memberid = #{memberid.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MemberAddress" >
		SELECT 
			<include refid="memberAddressColumns"/>
		FROM member_address a
		<include refid="memberAddressJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO member_address(
			id,
			memberid,
			province,
			city,
			county,
			address,
			isdefault,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			shr,
			shrmobile
		) VALUES (
			#{id},
			#{memberid.id},
			#{province},
			#{city},
			#{county},
			#{address},
			#{isdefault},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{shr},
			#{shrmobile}
		)
	</insert>
	
	<update id="update">
		UPDATE member_address SET 	
			memberid = #{memberid.id},
			province = #{province},
			city = #{city},
			county = #{county},
			address = #{address},
			isdefault = #{isdefault},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			shr = #{shr},
			shrmobile = #{shrmobile}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM member_address
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE memberid = #{memberid.id}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE member_address SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE memberid = #{memberid.id}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="MemberAddress" statementType="STATEMENT">
		select * FROM member_address  where ${propertyName} = '${value}'
	</select>
	
</mapper>